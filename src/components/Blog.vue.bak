<template>
  <div>
    <header-bar
      :isLogin="true"></header-bar>
    <div style="width: 50%;margin: 20px auto;">
      <el-upload
        class="upload-demo"
        action="//up.qiniup.com"
        type="drag"
        :accept="accepts"
        :before-upload="beforeUpload"
        :auto-upload="true"
        :headers="headers"
        :on-success="handleSuccess"
        :data="form"
      >
        <el-button size="small" type="primary">点击上传</el-button>
        <div slot="tip" class="el-upload__tip">只能上传jpg/png/zip文件，且不超过500kb</div>
      </el-upload>
      <el-input
        type="textarea"
        autosize
        placeholder="请输入博客名称"
        v-model="blogName">
      </el-input>
      <div style="margin: 20px 0;"></div>
      <el-input placeholder="请输入博客地址" v-model="blogUrl">
        <template slot="prepend">Http://</template>
      </el-input>
      <div style="margin: 20px 0;"></div>
      <el-input
        type="textarea"
        :autosize="{ minRows: 2, maxRows: 4}"
        placeholder="一句话介绍博客"
        v-model="blogDesc">
      </el-input>
      <div style="margin: 20px 0;"></div>
      <el-button type="primary" @click="onSubmit">提交</el-button>
    </div>
    <footer-bar></footer-bar>
  </div>
</template>
<script>
  import consts from "../constant/consts";
  import HeaderBar from "./HeaderBar.vue";
  import FooterBar from "./FooterBar.vue";
  import * as types from '../store/mutation-types'
  import Vue from 'vue';
  import { Input } from 'element-ui';
  import { Upload  } from 'element-ui';
  import { Button  } from 'element-ui';
  Vue.component(Input.name, Input);
  Vue.component(Upload .name, Upload);
  Vue.component(Button .name, Button);
  export default {
    data() {
      return {
        accepts: 'image/jpeg, image/jpg, image/png, image/gif, application/zip, application/x-zip-compressed',
        blogName: '',
        blogDesc: '',
        imageUrl: '',
        blogUrl: '',
        form: {
          key: '',
          token: ''
        },
        bucketHost: 'http://p31mtjzxq.bkt.clouddn.com/',   // 上传图片的外链域名,七牛设置的
      }
    },
    computed: {
      headers() {
        return this.$store.state.qiniuToken
      }
    },
    components: {
      HeaderBar,
      FooterBar
    },
    methods: {
      handleSuccess(res, file, fileList) {
        console.log('handleSuccess')
        this.imageUrl = `${this.bucketHost}/${res.key}`
      },
      genToken: async function(key) {
          const _this = this
          return new Promise((resolve) => {
            this.axios.get(`/api/v1.0/qiniu/token/${key}`)
              .then((res) => {
                console.log('/api/v1.0/qiniu/token/')
                _this.form.key = key
                _this.form.token = res.data.token
                console.log('res.data.token', res.data.token)
                _this.$store.commit('qiniu', res.data.token)
                console.log('form:', _this.form)
                resolve()
              }).catch((err) => {
                console.log(err)
            })
          })
      },
      beforeUpload: async function(file) {
        let currentTime = this.$moment().format('YYYYMMDDHHmmss').toString()
        let prefixTime = this.$moment(file.lastModifiedDate).format('HHmmss').toString()
        let fileName = file.name
        let key = encodeURI(`${currentTime}_${prefixTime}${fileName}`)
        await this.genToken(key)
        console.log('genToken.....')

        return this.form;
      },
      onSubmit() {
        const _this = this;
        this.axios.post(consts.blogs, {
          name: this.blogName,
          description: this.blogDesc,
          blog_url: this.blogUrl,
          image_url: this.imageUrl
        })
          .then(function(response) {
            if (response.status === 201) {
              _this.$router.push("/");
            }
          })
          .catch(function(error) {
            console.log(error);
          });
      }
    },
  }
</script>

<style scoped>
  .avatar-uploader .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
  .avatar-uploader .el-upload:hover {
    border-color: #409EFF;
  }
  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 178px;
    height: 178px;
    line-height: 178px;
    text-align: center;
  }
  .avatar {
    width: 178px;
    height: 178px;
    display: block;
  }
</style>
